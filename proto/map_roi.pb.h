// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: map_roi.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_map_5froi_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_map_5froi_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_map_5froi_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_map_5froi_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_map_5froi_2eproto;
namespace apollo {
namespace hdmap {
class MapRoiPoint;
class MapRoiPointDefaultTypeInternal;
extern MapRoiPointDefaultTypeInternal _MapRoiPoint_default_instance_;
class MapRoiPointCloud;
class MapRoiPointCloudDefaultTypeInternal;
extern MapRoiPointCloudDefaultTypeInternal _MapRoiPointCloud_default_instance_;
class MapRoiStruct;
class MapRoiStructDefaultTypeInternal;
extern MapRoiStructDefaultTypeInternal _MapRoiStruct_default_instance_;
}  // namespace hdmap
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> ::apollo::hdmap::MapRoiPoint* Arena::CreateMaybeMessage<::apollo::hdmap::MapRoiPoint>(Arena*);
template<> ::apollo::hdmap::MapRoiPointCloud* Arena::CreateMaybeMessage<::apollo::hdmap::MapRoiPointCloud>(Arena*);
template<> ::apollo::hdmap::MapRoiStruct* Arena::CreateMaybeMessage<::apollo::hdmap::MapRoiStruct>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace apollo {
namespace hdmap {

// ===================================================================

class MapRoiPoint PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.hdmap.MapRoiPoint) */ {
 public:
  inline MapRoiPoint() : MapRoiPoint(nullptr) {}
  virtual ~MapRoiPoint();

  MapRoiPoint(const MapRoiPoint& from);
  MapRoiPoint(MapRoiPoint&& from) noexcept
    : MapRoiPoint() {
    *this = ::std::move(from);
  }

  inline MapRoiPoint& operator=(const MapRoiPoint& from) {
    CopyFrom(from);
    return *this;
  }
  inline MapRoiPoint& operator=(MapRoiPoint&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MapRoiPoint& default_instance();

  static inline const MapRoiPoint* internal_default_instance() {
    return reinterpret_cast<const MapRoiPoint*>(
               &_MapRoiPoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MapRoiPoint& a, MapRoiPoint& b) {
    a.Swap(&b);
  }
  inline void Swap(MapRoiPoint* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MapRoiPoint* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MapRoiPoint* New() const final {
    return CreateMaybeMessage<MapRoiPoint>(nullptr);
  }

  MapRoiPoint* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MapRoiPoint>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MapRoiPoint& from);
  void MergeFrom(const MapRoiPoint& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MapRoiPoint* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.hdmap.MapRoiPoint";
  }
  protected:
  explicit MapRoiPoint(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_map_5froi_2eproto);
    return ::descriptor_table_map_5froi_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kZFieldNumber = 3,
    kXFieldNumber = 1,
    kYFieldNumber = 2,
  };
  // optional double z = 3 [default = 0];
  bool has_z() const;
  private:
  bool _internal_has_z() const;
  public:
  void clear_z();
  double z() const;
  void set_z(double value);
  private:
  double _internal_z() const;
  void _internal_set_z(double value);
  public:

  // optional double x = 1 [default = nan];
  bool has_x() const;
  private:
  bool _internal_has_x() const;
  public:
  void clear_x();
  double x() const;
  void set_x(double value);
  private:
  double _internal_x() const;
  void _internal_set_x(double value);
  public:

  // optional double y = 2 [default = nan];
  bool has_y() const;
  private:
  bool _internal_has_y() const;
  public:
  void clear_y();
  double y() const;
  void set_y(double value);
  private:
  double _internal_y() const;
  void _internal_set_y(double value);
  public:

  // @@protoc_insertion_point(class_scope:apollo.hdmap.MapRoiPoint)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  double z_;
  double x_;
  double y_;
  friend struct ::TableStruct_map_5froi_2eproto;
};
// -------------------------------------------------------------------

class MapRoiPointCloud PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.hdmap.MapRoiPointCloud) */ {
 public:
  inline MapRoiPointCloud() : MapRoiPointCloud(nullptr) {}
  virtual ~MapRoiPointCloud();

  MapRoiPointCloud(const MapRoiPointCloud& from);
  MapRoiPointCloud(MapRoiPointCloud&& from) noexcept
    : MapRoiPointCloud() {
    *this = ::std::move(from);
  }

  inline MapRoiPointCloud& operator=(const MapRoiPointCloud& from) {
    CopyFrom(from);
    return *this;
  }
  inline MapRoiPointCloud& operator=(MapRoiPointCloud&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MapRoiPointCloud& default_instance();

  static inline const MapRoiPointCloud* internal_default_instance() {
    return reinterpret_cast<const MapRoiPointCloud*>(
               &_MapRoiPointCloud_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MapRoiPointCloud& a, MapRoiPointCloud& b) {
    a.Swap(&b);
  }
  inline void Swap(MapRoiPointCloud* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MapRoiPointCloud* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MapRoiPointCloud* New() const final {
    return CreateMaybeMessage<MapRoiPointCloud>(nullptr);
  }

  MapRoiPointCloud* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MapRoiPointCloud>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MapRoiPointCloud& from);
  void MergeFrom(const MapRoiPointCloud& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MapRoiPointCloud* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.hdmap.MapRoiPointCloud";
  }
  protected:
  explicit MapRoiPointCloud(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_map_5froi_2eproto);
    return ::descriptor_table_map_5froi_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPointsFieldNumber = 1,
  };
  // repeated .apollo.hdmap.MapRoiPoint points = 1;
  int points_size() const;
  private:
  int _internal_points_size() const;
  public:
  void clear_points();
  ::apollo::hdmap::MapRoiPoint* mutable_points(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::hdmap::MapRoiPoint >*
      mutable_points();
  private:
  const ::apollo::hdmap::MapRoiPoint& _internal_points(int index) const;
  ::apollo::hdmap::MapRoiPoint* _internal_add_points();
  public:
  const ::apollo::hdmap::MapRoiPoint& points(int index) const;
  ::apollo::hdmap::MapRoiPoint* add_points();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::hdmap::MapRoiPoint >&
      points() const;

  // @@protoc_insertion_point(class_scope:apollo.hdmap.MapRoiPointCloud)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::hdmap::MapRoiPoint > points_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_map_5froi_2eproto;
};
// -------------------------------------------------------------------

class MapRoiStruct PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.hdmap.MapRoiStruct) */ {
 public:
  inline MapRoiStruct() : MapRoiStruct(nullptr) {}
  virtual ~MapRoiStruct();

  MapRoiStruct(const MapRoiStruct& from);
  MapRoiStruct(MapRoiStruct&& from) noexcept
    : MapRoiStruct() {
    *this = ::std::move(from);
  }

  inline MapRoiStruct& operator=(const MapRoiStruct& from) {
    CopyFrom(from);
    return *this;
  }
  inline MapRoiStruct& operator=(MapRoiStruct&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MapRoiStruct& default_instance();

  static inline const MapRoiStruct* internal_default_instance() {
    return reinterpret_cast<const MapRoiStruct*>(
               &_MapRoiStruct_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MapRoiStruct& a, MapRoiStruct& b) {
    a.Swap(&b);
  }
  inline void Swap(MapRoiStruct* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MapRoiStruct* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MapRoiStruct* New() const final {
    return CreateMaybeMessage<MapRoiStruct>(nullptr);
  }

  MapRoiStruct* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MapRoiStruct>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MapRoiStruct& from);
  void MergeFrom(const MapRoiStruct& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MapRoiStruct* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.hdmap.MapRoiStruct";
  }
  protected:
  explicit MapRoiStruct(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_map_5froi_2eproto);
    return ::descriptor_table_map_5froi_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoadPolygonsFieldNumber = 1,
    kJunctionPolygonsFieldNumber = 2,
  };
  // repeated .apollo.hdmap.MapRoiPointCloud road_polygons = 1;
  int road_polygons_size() const;
  private:
  int _internal_road_polygons_size() const;
  public:
  void clear_road_polygons();
  ::apollo::hdmap::MapRoiPointCloud* mutable_road_polygons(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::hdmap::MapRoiPointCloud >*
      mutable_road_polygons();
  private:
  const ::apollo::hdmap::MapRoiPointCloud& _internal_road_polygons(int index) const;
  ::apollo::hdmap::MapRoiPointCloud* _internal_add_road_polygons();
  public:
  const ::apollo::hdmap::MapRoiPointCloud& road_polygons(int index) const;
  ::apollo::hdmap::MapRoiPointCloud* add_road_polygons();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::hdmap::MapRoiPointCloud >&
      road_polygons() const;

  // repeated .apollo.hdmap.MapRoiPointCloud junction_polygons = 2;
  int junction_polygons_size() const;
  private:
  int _internal_junction_polygons_size() const;
  public:
  void clear_junction_polygons();
  ::apollo::hdmap::MapRoiPointCloud* mutable_junction_polygons(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::hdmap::MapRoiPointCloud >*
      mutable_junction_polygons();
  private:
  const ::apollo::hdmap::MapRoiPointCloud& _internal_junction_polygons(int index) const;
  ::apollo::hdmap::MapRoiPointCloud* _internal_add_junction_polygons();
  public:
  const ::apollo::hdmap::MapRoiPointCloud& junction_polygons(int index) const;
  ::apollo::hdmap::MapRoiPointCloud* add_junction_polygons();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::hdmap::MapRoiPointCloud >&
      junction_polygons() const;

  // @@protoc_insertion_point(class_scope:apollo.hdmap.MapRoiStruct)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::hdmap::MapRoiPointCloud > road_polygons_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::hdmap::MapRoiPointCloud > junction_polygons_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_map_5froi_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MapRoiPoint

// optional double x = 1 [default = nan];
inline bool MapRoiPoint::_internal_has_x() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MapRoiPoint::has_x() const {
  return _internal_has_x();
}
inline void MapRoiPoint::clear_x() {
  x_ = std::numeric_limits<double>::quiet_NaN();
  _has_bits_[0] &= ~0x00000002u;
}
inline double MapRoiPoint::_internal_x() const {
  return x_;
}
inline double MapRoiPoint::x() const {
  // @@protoc_insertion_point(field_get:apollo.hdmap.MapRoiPoint.x)
  return _internal_x();
}
inline void MapRoiPoint::_internal_set_x(double value) {
  _has_bits_[0] |= 0x00000002u;
  x_ = value;
}
inline void MapRoiPoint::set_x(double value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:apollo.hdmap.MapRoiPoint.x)
}

// optional double y = 2 [default = nan];
inline bool MapRoiPoint::_internal_has_y() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MapRoiPoint::has_y() const {
  return _internal_has_y();
}
inline void MapRoiPoint::clear_y() {
  y_ = std::numeric_limits<double>::quiet_NaN();
  _has_bits_[0] &= ~0x00000004u;
}
inline double MapRoiPoint::_internal_y() const {
  return y_;
}
inline double MapRoiPoint::y() const {
  // @@protoc_insertion_point(field_get:apollo.hdmap.MapRoiPoint.y)
  return _internal_y();
}
inline void MapRoiPoint::_internal_set_y(double value) {
  _has_bits_[0] |= 0x00000004u;
  y_ = value;
}
inline void MapRoiPoint::set_y(double value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:apollo.hdmap.MapRoiPoint.y)
}

// optional double z = 3 [default = 0];
inline bool MapRoiPoint::_internal_has_z() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MapRoiPoint::has_z() const {
  return _internal_has_z();
}
inline void MapRoiPoint::clear_z() {
  z_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline double MapRoiPoint::_internal_z() const {
  return z_;
}
inline double MapRoiPoint::z() const {
  // @@protoc_insertion_point(field_get:apollo.hdmap.MapRoiPoint.z)
  return _internal_z();
}
inline void MapRoiPoint::_internal_set_z(double value) {
  _has_bits_[0] |= 0x00000001u;
  z_ = value;
}
inline void MapRoiPoint::set_z(double value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:apollo.hdmap.MapRoiPoint.z)
}

// -------------------------------------------------------------------

// MapRoiPointCloud

// repeated .apollo.hdmap.MapRoiPoint points = 1;
inline int MapRoiPointCloud::_internal_points_size() const {
  return points_.size();
}
inline int MapRoiPointCloud::points_size() const {
  return _internal_points_size();
}
inline void MapRoiPointCloud::clear_points() {
  points_.Clear();
}
inline ::apollo::hdmap::MapRoiPoint* MapRoiPointCloud::mutable_points(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.hdmap.MapRoiPointCloud.points)
  return points_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::hdmap::MapRoiPoint >*
MapRoiPointCloud::mutable_points() {
  // @@protoc_insertion_point(field_mutable_list:apollo.hdmap.MapRoiPointCloud.points)
  return &points_;
}
inline const ::apollo::hdmap::MapRoiPoint& MapRoiPointCloud::_internal_points(int index) const {
  return points_.Get(index);
}
inline const ::apollo::hdmap::MapRoiPoint& MapRoiPointCloud::points(int index) const {
  // @@protoc_insertion_point(field_get:apollo.hdmap.MapRoiPointCloud.points)
  return _internal_points(index);
}
inline ::apollo::hdmap::MapRoiPoint* MapRoiPointCloud::_internal_add_points() {
  return points_.Add();
}
inline ::apollo::hdmap::MapRoiPoint* MapRoiPointCloud::add_points() {
  // @@protoc_insertion_point(field_add:apollo.hdmap.MapRoiPointCloud.points)
  return _internal_add_points();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::hdmap::MapRoiPoint >&
MapRoiPointCloud::points() const {
  // @@protoc_insertion_point(field_list:apollo.hdmap.MapRoiPointCloud.points)
  return points_;
}

// -------------------------------------------------------------------

// MapRoiStruct

// repeated .apollo.hdmap.MapRoiPointCloud road_polygons = 1;
inline int MapRoiStruct::_internal_road_polygons_size() const {
  return road_polygons_.size();
}
inline int MapRoiStruct::road_polygons_size() const {
  return _internal_road_polygons_size();
}
inline void MapRoiStruct::clear_road_polygons() {
  road_polygons_.Clear();
}
inline ::apollo::hdmap::MapRoiPointCloud* MapRoiStruct::mutable_road_polygons(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.hdmap.MapRoiStruct.road_polygons)
  return road_polygons_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::hdmap::MapRoiPointCloud >*
MapRoiStruct::mutable_road_polygons() {
  // @@protoc_insertion_point(field_mutable_list:apollo.hdmap.MapRoiStruct.road_polygons)
  return &road_polygons_;
}
inline const ::apollo::hdmap::MapRoiPointCloud& MapRoiStruct::_internal_road_polygons(int index) const {
  return road_polygons_.Get(index);
}
inline const ::apollo::hdmap::MapRoiPointCloud& MapRoiStruct::road_polygons(int index) const {
  // @@protoc_insertion_point(field_get:apollo.hdmap.MapRoiStruct.road_polygons)
  return _internal_road_polygons(index);
}
inline ::apollo::hdmap::MapRoiPointCloud* MapRoiStruct::_internal_add_road_polygons() {
  return road_polygons_.Add();
}
inline ::apollo::hdmap::MapRoiPointCloud* MapRoiStruct::add_road_polygons() {
  // @@protoc_insertion_point(field_add:apollo.hdmap.MapRoiStruct.road_polygons)
  return _internal_add_road_polygons();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::hdmap::MapRoiPointCloud >&
MapRoiStruct::road_polygons() const {
  // @@protoc_insertion_point(field_list:apollo.hdmap.MapRoiStruct.road_polygons)
  return road_polygons_;
}

// repeated .apollo.hdmap.MapRoiPointCloud junction_polygons = 2;
inline int MapRoiStruct::_internal_junction_polygons_size() const {
  return junction_polygons_.size();
}
inline int MapRoiStruct::junction_polygons_size() const {
  return _internal_junction_polygons_size();
}
inline void MapRoiStruct::clear_junction_polygons() {
  junction_polygons_.Clear();
}
inline ::apollo::hdmap::MapRoiPointCloud* MapRoiStruct::mutable_junction_polygons(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.hdmap.MapRoiStruct.junction_polygons)
  return junction_polygons_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::hdmap::MapRoiPointCloud >*
MapRoiStruct::mutable_junction_polygons() {
  // @@protoc_insertion_point(field_mutable_list:apollo.hdmap.MapRoiStruct.junction_polygons)
  return &junction_polygons_;
}
inline const ::apollo::hdmap::MapRoiPointCloud& MapRoiStruct::_internal_junction_polygons(int index) const {
  return junction_polygons_.Get(index);
}
inline const ::apollo::hdmap::MapRoiPointCloud& MapRoiStruct::junction_polygons(int index) const {
  // @@protoc_insertion_point(field_get:apollo.hdmap.MapRoiStruct.junction_polygons)
  return _internal_junction_polygons(index);
}
inline ::apollo::hdmap::MapRoiPointCloud* MapRoiStruct::_internal_add_junction_polygons() {
  return junction_polygons_.Add();
}
inline ::apollo::hdmap::MapRoiPointCloud* MapRoiStruct::add_junction_polygons() {
  // @@protoc_insertion_point(field_add:apollo.hdmap.MapRoiStruct.junction_polygons)
  return _internal_add_junction_polygons();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::hdmap::MapRoiPointCloud >&
MapRoiStruct::junction_polygons() const {
  // @@protoc_insertion_point(field_list:apollo.hdmap.MapRoiStruct.junction_polygons)
  return junction_polygons_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace hdmap
}  // namespace apollo

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_map_5froi_2eproto
